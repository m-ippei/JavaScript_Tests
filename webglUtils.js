const defaultShaderType = ["VERTEX_SHADER", "FRAGMENT_SHADER"]; function loadShader(r, e, t) { const o = r.createShader(t); if (r.shaderSource(o, e), r.compileShader(o), !r.getShaderParameter(o, r.COMPILE_STATUS)) { const e = r.getShaderInfoLog(o); return console.log(`Error compiling shader: ${e}`), r.deleteShader(o), null } return o } function createProgram(r, e, t, o) { const a = r.createProgram(); if (e.forEach(e => { r.attachShader(a, e) }), t && t.forEach((e, t) => { r.bindAttribLocation(a, o ? o[t] : t, e) }), r.linkProgram(a), !r.getProgramParameter(a, r.LINK_STATUS)) { const e = r.getProgramInfoLog(a); return consle.log(`Error in program linkin: ${e}`), r.deleteProgram(a), null } return a } function createProgramFromSources(r, e, t, o) { const a = []; for (let t = 0; t < e.length; t += 1)a.push(loadShader(r, e[t], r[defaultShaderType[t]])); return createProgram(r, a, t, o) } function resizeCanvasToDisplaySize(r) { const e = r.clientWidth, t = r.clientHeight; return (r.width !== e || r.height !== t) && (r.width = e, r.height = t, !0) }
